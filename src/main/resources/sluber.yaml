swagger: '2.0'
info:
  version: 1.0.0
  title: Slalom SLUBER
  description: 'SLUBER backend service to help persons coordinate rides'
paths:
  /:
    get:
      tags:
        - health check
      summary: Health Check for AWS
      operationId: healthCheck
      responses:
        200:
          description: successful operation
  /sluber/trips:
    post:
      tags:
        - trip
      summary: Create a new trip
      operationId: createTrip
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Trip to create
          required: true
          schema:
            $ref: '#/definitions/CreateTripDetails'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TripDetails'
        400:
          description: Invalid input
    get:
      tags:
        - trip
      summary: Retrieves all trips
      operationId: getTrips
      produces:
        - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TripDetails'
  /sluber/trips/{tripId}/add-passenger:
    put:
      tags:
        - trip
      summary: Adds a passenger to a trip
      operationId: addPassenger
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tripId
          description: Trip Id of the trip to update
          type: string
          required: true
        - in: body
          name: body
          description: Updated loyalty promotion
          required: true
          schema:
            $ref: '#/definitions/EmployeeDetails'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TripDetails'
        404:
          description: Trip not found
  /trip:
    post:
      tags:
        - trip
      summary: GetAllTrips
      operationId: getAllTripsUsingGet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Grab all the trips
          required: true
          schema:
            $ref: '#/definitions/CreateTripDetails'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TripDetails'
        400:
          description: Invalid input
definitions:
  CreateTripDetails:
    type: object
    properties:
      origin:
        type: string
      departureTime:
        type: string
        format: date-time
      comments:
        type: string
      seatsAvailable:
        type: integer
      passengers:
        type: array
        items:
          $ref: '#/definitions/EmployeeDetails'
      destination:
        type: string
      arrivalTime:
        type: string
        format: date-time
      driver:
        $ref: '#/definitions/EmployeeDetails'
      originator:
        type: string
        enum:
          - DRIVER
          - PASSENGER
  TripDetails:
    type: object
    properties:
      tripId:
        type: string
      origin:
        type: string
      departureTime:
        type: string
        format: date-time
      comments:
        type: string
      seatsAvailable:
        type: integer
      passengers:
        type: array
        items:
          $ref: '#/definitions/EmployeeDetails'
      destination:
        type: string
      arrivalTime:
        type: string
        format: date-time
      driver:
        $ref: '#/definitions/EmployeeDetails'
      originator:
        type: string
        enum:
          - DRIVER
          - PASSENGER
  EmployeeDetails:
    type: object
    properties:
      name:
        type: string
      phoneNumber:
        type: string

schemes:
  - http